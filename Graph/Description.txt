This programme performs DFS on a graph between a given pair of vertices for every possible path (without loops).

In this programme every vertex is represented by a unique integer and a vector is used to store the edges of the graph originiting from each vertex.

A path is invalid if it encounters a loop (checked by the boolean array visited[]) or terminates in a leaf (edge[*I].empty returns true).

The input to the programme should be as follows:
T			-> No. of test cases.
{
N E			-> No. of vertices & edges respectively.
V11 V12 ... VE1 VE2	-> Pair of vertices (represented by distinct integers) describing each of the E edges. (Vij < N).
S D			-> Source and Destination vertices for graph search. (S < N; D < N).
} xT...

The programme prints the number of all possible paths within the graph, between the given pair of vertices.
